/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package io.github.heldev.verso.app;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-01-03")
public class BookDto implements org.apache.thrift.TBase<BookDto, BookDto._Fields>, java.io.Serializable, Cloneable, Comparable<BookDto> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BookDto");

  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField AUTHORS_FIELD_DESC = new org.apache.thrift.protocol.TField("authors", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PUBLISHERS_FIELD_DESC = new org.apache.thrift.protocol.TField("publishers", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField PUBLISHERS2_FIELD_DESC = new org.apache.thrift.protocol.TField("publishers2", org.apache.thrift.protocol.TType.LIST, (short)40);
  private static final org.apache.thrift.protocol.TField REVIEWS_FIELD_DESC = new org.apache.thrift.protocol.TField("reviews", org.apache.thrift.protocol.TType.MAP, (short)5);
  private static final org.apache.thrift.protocol.TField MY_UNION_FIELD_DESC = new org.apache.thrift.protocol.TField("myUnion", org.apache.thrift.protocol.TType.STRUCT, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new BookDtoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new BookDtoTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String title; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.Set<java.util.List<java.lang.String>>> authors; // required
  public @org.apache.thrift.annotation.Nullable Type type; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<Publisher>>> publishers; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<Publisher>>> publishers2; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>> reviews; // required
  public @org.apache.thrift.annotation.Nullable MyUnion myUnion; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TITLE((short)1, "title"),
    AUTHORS((short)2, "authors"),
    TYPE((short)3, "type"),
    PUBLISHERS((short)4, "publishers"),
    PUBLISHERS2((short)40, "publishers2"),
    REVIEWS((short)5, "reviews"),
    MY_UNION((short)6, "myUnion");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TITLE
          return TITLE;
        case 2: // AUTHORS
          return AUTHORS;
        case 3: // TYPE
          return TYPE;
        case 4: // PUBLISHERS
          return PUBLISHERS;
        case 40: // PUBLISHERS2
          return PUBLISHERS2;
        case 5: // REVIEWS
          return REVIEWS;
        case 6: // MY_UNION
          return MY_UNION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.TYPE,_Fields.MY_UNION};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTHORS, new org.apache.thrift.meta_data.FieldMetaData("authors", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
                new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))))));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.ENUM        , "Type")));
    tmpMap.put(_Fields.PUBLISHERS, new org.apache.thrift.meta_data.FieldMetaData("publishers", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT                    , "Publisher"))))));
    tmpMap.put(_Fields.PUBLISHERS2, new org.apache.thrift.meta_data.FieldMetaData("publishers2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT                    , "Publisher"))))));
    tmpMap.put(_Fields.REVIEWS, new org.apache.thrift.meta_data.FieldMetaData("reviews", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)), 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    tmpMap.put(_Fields.MY_UNION, new org.apache.thrift.meta_data.FieldMetaData("myUnion", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "MyUnion")));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BookDto.class, metaDataMap);
  }

  public BookDto() {
    this.authors = new java.util.ArrayList<java.util.Set<java.util.List<java.lang.String>>>();

    this.publishers = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>();
    java.util.List<java.util.List<Publisher>> tmp0 = new java.util.ArrayList<java.util.List<Publisher>>();

    this.publishers.add(tmp0);
    java.util.List<java.util.List<Publisher>> tmp1 = new java.util.ArrayList<java.util.List<Publisher>>();
    java.util.List<Publisher> tmp2 = new java.util.ArrayList<Publisher>();

    tmp1.add(tmp2);

    this.publishers.add(tmp1);

    this.publishers2 = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>();
    java.util.List<java.util.List<Publisher>> tmp3 = new java.util.ArrayList<java.util.List<Publisher>>();
    java.util.List<Publisher> tmp4 = new java.util.ArrayList<Publisher>();
    Publisher tmp5 = new Publisher();
    tmp5.setName("Jo");

    tmp4.add(tmp5);

    tmp3.add(tmp4);

    this.publishers2.add(tmp3);

  }

  public BookDto(
    java.lang.String title,
    java.util.List<java.util.Set<java.util.List<java.lang.String>>> authors,
    java.util.List<java.util.List<java.util.List<Publisher>>> publishers,
    java.util.List<java.util.List<java.util.List<Publisher>>> publishers2,
    java.util.Map<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>> reviews)
  {
    this();
    this.title = title;
    this.authors = authors;
    this.publishers = publishers;
    this.publishers2 = publishers2;
    this.reviews = reviews;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BookDto(BookDto other) {
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetAuthors()) {
      java.util.List<java.util.Set<java.util.List<java.lang.String>>> __this__authors = new java.util.ArrayList<java.util.Set<java.util.List<java.lang.String>>>(other.authors.size());
      for (java.util.Set<java.util.List<java.lang.String>> other_element : other.authors) {
        java.util.Set<java.util.List<java.lang.String>> __this__authors_copy = new java.util.HashSet<java.util.List<java.lang.String>>(other_element.size());
        for (java.util.List<java.lang.String> other_element_element : other_element) {
          java.util.List<java.lang.String> __this__authors_copy_copy = new java.util.ArrayList<java.lang.String>(other_element_element);
          __this__authors_copy.add(__this__authors_copy_copy);
        }
        __this__authors.add(__this__authors_copy);
      }
      this.authors = __this__authors;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetPublishers()) {
      java.util.List<java.util.List<java.util.List<Publisher>>> __this__publishers = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>(other.publishers.size());
      for (java.util.List<java.util.List<Publisher>> other_element : other.publishers) {
        java.util.List<java.util.List<Publisher>> __this__publishers_copy = new java.util.ArrayList<java.util.List<Publisher>>(other_element.size());
        for (java.util.List<Publisher> other_element_element : other_element) {
          java.util.List<Publisher> __this__publishers_copy_copy = new java.util.ArrayList<Publisher>(other_element_element.size());
          for (Publisher other_element_element_element : other_element_element) {
            __this__publishers_copy_copy.add(new Publisher(other_element_element_element));
          }
          __this__publishers_copy.add(__this__publishers_copy_copy);
        }
        __this__publishers.add(__this__publishers_copy);
      }
      this.publishers = __this__publishers;
    }
    if (other.isSetPublishers2()) {
      java.util.List<java.util.List<java.util.List<Publisher>>> __this__publishers2 = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>(other.publishers2.size());
      for (java.util.List<java.util.List<Publisher>> other_element : other.publishers2) {
        java.util.List<java.util.List<Publisher>> __this__publishers2_copy = new java.util.ArrayList<java.util.List<Publisher>>(other_element.size());
        for (java.util.List<Publisher> other_element_element : other_element) {
          java.util.List<Publisher> __this__publishers2_copy_copy = new java.util.ArrayList<Publisher>(other_element_element.size());
          for (Publisher other_element_element_element : other_element_element) {
            __this__publishers2_copy_copy.add(new Publisher(other_element_element_element));
          }
          __this__publishers2_copy.add(__this__publishers2_copy_copy);
        }
        __this__publishers2.add(__this__publishers2_copy);
      }
      this.publishers2 = __this__publishers2;
    }
    if (other.isSetReviews()) {
      java.util.Map<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>> __this__reviews = new java.util.HashMap<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>>(other.reviews.size());
      for (java.util.Map.Entry<java.util.Set<java.lang.Integer>, java.util.List<java.lang.String>> other_element : other.reviews.entrySet()) {

        java.util.Set<java.lang.Integer> other_element_key = other_element.getKey();
        java.util.List<java.lang.String> other_element_value = other_element.getValue();

        java.util.Set<java.lang.Integer> __this__reviews_copy_key = new java.util.HashSet<java.lang.Integer>(other_element_key);

        java.util.List<java.lang.String> __this__reviews_copy_value = new java.util.ArrayList<java.lang.String>(other_element_value);

        __this__reviews.put(__this__reviews_copy_key, __this__reviews_copy_value);
      }
      this.reviews = __this__reviews;
    }
    if (other.isSetMyUnion()) {
      this.myUnion = new MyUnion(other.myUnion);
    }
  }

  public BookDto deepCopy() {
    return new BookDto(this);
  }

  @Override
  public void clear() {
    this.title = null;
    this.authors = new java.util.ArrayList<java.util.Set<java.util.List<java.lang.String>>>();

    this.type = null;
    this.publishers = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>();
    java.util.List<java.util.List<Publisher>> tmp6 = new java.util.ArrayList<java.util.List<Publisher>>();

    this.publishers.add(tmp6);
    java.util.List<java.util.List<Publisher>> tmp7 = new java.util.ArrayList<java.util.List<Publisher>>();
    java.util.List<Publisher> tmp8 = new java.util.ArrayList<Publisher>();

    tmp7.add(tmp8);

    this.publishers.add(tmp7);

    this.publishers2 = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>();
    java.util.List<java.util.List<Publisher>> tmp9 = new java.util.ArrayList<java.util.List<Publisher>>();
    java.util.List<Publisher> tmp10 = new java.util.ArrayList<Publisher>();
    Publisher tmp11 = new Publisher();
    tmp11.setName("Jo");

    tmp10.add(tmp11);

    tmp9.add(tmp10);

    this.publishers2.add(tmp9);

    this.reviews = null;
    this.myUnion = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTitle() {
    return this.title;
  }

  public BookDto setTitle(@org.apache.thrift.annotation.Nullable java.lang.String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public int getAuthorsSize() {
    return (this.authors == null) ? 0 : this.authors.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.Set<java.util.List<java.lang.String>>> getAuthorsIterator() {
    return (this.authors == null) ? null : this.authors.iterator();
  }

  public void addToAuthors(java.util.Set<java.util.List<java.lang.String>> elem) {
    if (this.authors == null) {
      this.authors = new java.util.ArrayList<java.util.Set<java.util.List<java.lang.String>>>();
    }
    this.authors.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.Set<java.util.List<java.lang.String>>> getAuthors() {
    return this.authors;
  }

  public BookDto setAuthors(@org.apache.thrift.annotation.Nullable java.util.List<java.util.Set<java.util.List<java.lang.String>>> authors) {
    this.authors = authors;
    return this;
  }

  public void unsetAuthors() {
    this.authors = null;
  }

  /** Returns true if field authors is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthors() {
    return this.authors != null;
  }

  public void setAuthorsIsSet(boolean value) {
    if (!value) {
      this.authors = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public Type getType() {
    return this.type;
  }

  public BookDto setType(@org.apache.thrift.annotation.Nullable Type type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  public int getPublishersSize() {
    return (this.publishers == null) ? 0 : this.publishers.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.util.List<Publisher>>> getPublishersIterator() {
    return (this.publishers == null) ? null : this.publishers.iterator();
  }

  public void addToPublishers(java.util.List<java.util.List<Publisher>> elem) {
    if (this.publishers == null) {
      this.publishers = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>();
    }
    this.publishers.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.util.List<Publisher>>> getPublishers() {
    return this.publishers;
  }

  public BookDto setPublishers(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<Publisher>>> publishers) {
    this.publishers = publishers;
    return this;
  }

  public void unsetPublishers() {
    this.publishers = null;
  }

  /** Returns true if field publishers is set (has been assigned a value) and false otherwise */
  public boolean isSetPublishers() {
    return this.publishers != null;
  }

  public void setPublishersIsSet(boolean value) {
    if (!value) {
      this.publishers = null;
    }
  }

  public int getPublishers2Size() {
    return (this.publishers2 == null) ? 0 : this.publishers2.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.util.List<Publisher>>> getPublishers2Iterator() {
    return (this.publishers2 == null) ? null : this.publishers2.iterator();
  }

  public void addToPublishers2(java.util.List<java.util.List<Publisher>> elem) {
    if (this.publishers2 == null) {
      this.publishers2 = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>();
    }
    this.publishers2.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.util.List<Publisher>>> getPublishers2() {
    return this.publishers2;
  }

  public BookDto setPublishers2(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.util.List<Publisher>>> publishers2) {
    this.publishers2 = publishers2;
    return this;
  }

  public void unsetPublishers2() {
    this.publishers2 = null;
  }

  /** Returns true if field publishers2 is set (has been assigned a value) and false otherwise */
  public boolean isSetPublishers2() {
    return this.publishers2 != null;
  }

  public void setPublishers2IsSet(boolean value) {
    if (!value) {
      this.publishers2 = null;
    }
  }

  public int getReviewsSize() {
    return (this.reviews == null) ? 0 : this.reviews.size();
  }

  public void putToReviews(java.util.Set<java.lang.Integer> key, java.util.List<java.lang.String> val) {
    if (this.reviews == null) {
      this.reviews = new java.util.HashMap<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>>();
    }
    this.reviews.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>> getReviews() {
    return this.reviews;
  }

  public BookDto setReviews(@org.apache.thrift.annotation.Nullable java.util.Map<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>> reviews) {
    this.reviews = reviews;
    return this;
  }

  public void unsetReviews() {
    this.reviews = null;
  }

  /** Returns true if field reviews is set (has been assigned a value) and false otherwise */
  public boolean isSetReviews() {
    return this.reviews != null;
  }

  public void setReviewsIsSet(boolean value) {
    if (!value) {
      this.reviews = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public MyUnion getMyUnion() {
    return this.myUnion;
  }

  public BookDto setMyUnion(@org.apache.thrift.annotation.Nullable MyUnion myUnion) {
    this.myUnion = myUnion;
    return this;
  }

  public void unsetMyUnion() {
    this.myUnion = null;
  }

  /** Returns true if field myUnion is set (has been assigned a value) and false otherwise */
  public boolean isSetMyUnion() {
    return this.myUnion != null;
  }

  public void setMyUnionIsSet(boolean value) {
    if (!value) {
      this.myUnion = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((java.lang.String)value);
      }
      break;

    case AUTHORS:
      if (value == null) {
        unsetAuthors();
      } else {
        setAuthors((java.util.List<java.util.Set<java.util.List<java.lang.String>>>)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((Type)value);
      }
      break;

    case PUBLISHERS:
      if (value == null) {
        unsetPublishers();
      } else {
        setPublishers((java.util.List<java.util.List<java.util.List<Publisher>>>)value);
      }
      break;

    case PUBLISHERS2:
      if (value == null) {
        unsetPublishers2();
      } else {
        setPublishers2((java.util.List<java.util.List<java.util.List<Publisher>>>)value);
      }
      break;

    case REVIEWS:
      if (value == null) {
        unsetReviews();
      } else {
        setReviews((java.util.Map<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>>)value);
      }
      break;

    case MY_UNION:
      if (value == null) {
        unsetMyUnion();
      } else {
        setMyUnion((MyUnion)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TITLE:
      return getTitle();

    case AUTHORS:
      return getAuthors();

    case TYPE:
      return getType();

    case PUBLISHERS:
      return getPublishers();

    case PUBLISHERS2:
      return getPublishers2();

    case REVIEWS:
      return getReviews();

    case MY_UNION:
      return getMyUnion();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TITLE:
      return isSetTitle();
    case AUTHORS:
      return isSetAuthors();
    case TYPE:
      return isSetType();
    case PUBLISHERS:
      return isSetPublishers();
    case PUBLISHERS2:
      return isSetPublishers2();
    case REVIEWS:
      return isSetReviews();
    case MY_UNION:
      return isSetMyUnion();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof BookDto)
      return this.equals((BookDto)that);
    return false;
  }

  public boolean equals(BookDto that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_authors = true && this.isSetAuthors();
    boolean that_present_authors = true && that.isSetAuthors();
    if (this_present_authors || that_present_authors) {
      if (!(this_present_authors && that_present_authors))
        return false;
      if (!this.authors.equals(that.authors))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_publishers = true && this.isSetPublishers();
    boolean that_present_publishers = true && that.isSetPublishers();
    if (this_present_publishers || that_present_publishers) {
      if (!(this_present_publishers && that_present_publishers))
        return false;
      if (!this.publishers.equals(that.publishers))
        return false;
    }

    boolean this_present_publishers2 = true && this.isSetPublishers2();
    boolean that_present_publishers2 = true && that.isSetPublishers2();
    if (this_present_publishers2 || that_present_publishers2) {
      if (!(this_present_publishers2 && that_present_publishers2))
        return false;
      if (!this.publishers2.equals(that.publishers2))
        return false;
    }

    boolean this_present_reviews = true && this.isSetReviews();
    boolean that_present_reviews = true && that.isSetReviews();
    if (this_present_reviews || that_present_reviews) {
      if (!(this_present_reviews && that_present_reviews))
        return false;
      if (!this.reviews.equals(that.reviews))
        return false;
    }

    boolean this_present_myUnion = true && this.isSetMyUnion();
    boolean that_present_myUnion = true && that.isSetMyUnion();
    if (this_present_myUnion || that_present_myUnion) {
      if (!(this_present_myUnion && that_present_myUnion))
        return false;
      if (!this.myUnion.equals(that.myUnion))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthors()) ? 131071 : 524287);
    if (isSetAuthors())
      hashCode = hashCode * 8191 + authors.hashCode();

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type.getValue();

    hashCode = hashCode * 8191 + ((isSetPublishers()) ? 131071 : 524287);
    if (isSetPublishers())
      hashCode = hashCode * 8191 + publishers.hashCode();

    hashCode = hashCode * 8191 + ((isSetPublishers2()) ? 131071 : 524287);
    if (isSetPublishers2())
      hashCode = hashCode * 8191 + publishers2.hashCode();

    hashCode = hashCode * 8191 + ((isSetReviews()) ? 131071 : 524287);
    if (isSetReviews())
      hashCode = hashCode * 8191 + reviews.hashCode();

    hashCode = hashCode * 8191 + ((isSetMyUnion()) ? 131071 : 524287);
    if (isSetMyUnion())
      hashCode = hashCode * 8191 + myUnion.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(BookDto other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthors()).compareTo(other.isSetAuthors());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthors()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authors, other.authors);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPublishers()).compareTo(other.isSetPublishers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublishers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publishers, other.publishers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPublishers2()).compareTo(other.isSetPublishers2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublishers2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publishers2, other.publishers2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReviews()).compareTo(other.isSetReviews());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviews()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviews, other.reviews);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMyUnion()).compareTo(other.isSetMyUnion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMyUnion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.myUnion, other.myUnion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("BookDto(");
    boolean first = true;

    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("authors:");
    if (this.authors == null) {
      sb.append("null");
    } else {
      sb.append(this.authors);
    }
    first = false;
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      if (this.type == null) {
        sb.append("null");
      } else {
        sb.append(this.type);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("publishers:");
    if (this.publishers == null) {
      sb.append("null");
    } else {
      sb.append(this.publishers);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("publishers2:");
    if (this.publishers2 == null) {
      sb.append("null");
    } else {
      sb.append(this.publishers2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviews:");
    if (this.reviews == null) {
      sb.append("null");
    } else {
      sb.append(this.reviews);
    }
    first = false;
    if (isSetMyUnion()) {
      if (!first) sb.append(", ");
      sb.append("myUnion:");
      if (this.myUnion == null) {
        sb.append("null");
      } else {
        sb.append(this.myUnion);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (title == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'title' was not present! Struct: " + toString());
    }
    if (publishers2 == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'publishers2' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BookDtoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BookDtoStandardScheme getScheme() {
      return new BookDtoStandardScheme();
    }
  }

  private static class BookDtoStandardScheme extends org.apache.thrift.scheme.StandardScheme<BookDto> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BookDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AUTHORS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list12 = iprot.readListBegin();
                struct.authors = new java.util.ArrayList<java.util.Set<java.util.List<java.lang.String>>>(_list12.size);
                @org.apache.thrift.annotation.Nullable java.util.Set<java.util.List<java.lang.String>> _elem13;
                for (int _i14 = 0; _i14 < _list12.size; ++_i14)
                {
                  {
                    org.apache.thrift.protocol.TSet _set15 = iprot.readSetBegin();
                    _elem13 = new java.util.HashSet<java.util.List<java.lang.String>>(2*_set15.size);
                    @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _elem16;
                    for (int _i17 = 0; _i17 < _set15.size; ++_i17)
                    {
                      {
                        org.apache.thrift.protocol.TList _list18 = iprot.readListBegin();
                        _elem16 = new java.util.ArrayList<java.lang.String>(_list18.size);
                        @org.apache.thrift.annotation.Nullable java.lang.String _elem19;
                        for (int _i20 = 0; _i20 < _list18.size; ++_i20)
                        {
                          _elem19 = iprot.readString();
                          _elem16.add(_elem19);
                        }
                        iprot.readListEnd();
                      }
                      _elem13.add(_elem16);
                    }
                    iprot.readSetEnd();
                  }
                  struct.authors.add(_elem13);
                }
                iprot.readListEnd();
              }
              struct.setAuthorsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = io.github.heldev.verso.app.Type.findByValue(iprot.readI32());
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PUBLISHERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list21 = iprot.readListBegin();
                struct.publishers = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>(_list21.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<Publisher>> _elem22;
                for (int _i23 = 0; _i23 < _list21.size; ++_i23)
                {
                  {
                    org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                    _elem22 = new java.util.ArrayList<java.util.List<Publisher>>(_list24.size);
                    @org.apache.thrift.annotation.Nullable java.util.List<Publisher> _elem25;
                    for (int _i26 = 0; _i26 < _list24.size; ++_i26)
                    {
                      {
                        org.apache.thrift.protocol.TList _list27 = iprot.readListBegin();
                        _elem25 = new java.util.ArrayList<Publisher>(_list27.size);
                        @org.apache.thrift.annotation.Nullable Publisher _elem28;
                        for (int _i29 = 0; _i29 < _list27.size; ++_i29)
                        {
                          _elem28 = new Publisher();
                          _elem28.read(iprot);
                          _elem25.add(_elem28);
                        }
                        iprot.readListEnd();
                      }
                      _elem22.add(_elem25);
                    }
                    iprot.readListEnd();
                  }
                  struct.publishers.add(_elem22);
                }
                iprot.readListEnd();
              }
              struct.setPublishersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // PUBLISHERS2
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list30 = iprot.readListBegin();
                struct.publishers2 = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>(_list30.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<Publisher>> _elem31;
                for (int _i32 = 0; _i32 < _list30.size; ++_i32)
                {
                  {
                    org.apache.thrift.protocol.TList _list33 = iprot.readListBegin();
                    _elem31 = new java.util.ArrayList<java.util.List<Publisher>>(_list33.size);
                    @org.apache.thrift.annotation.Nullable java.util.List<Publisher> _elem34;
                    for (int _i35 = 0; _i35 < _list33.size; ++_i35)
                    {
                      {
                        org.apache.thrift.protocol.TList _list36 = iprot.readListBegin();
                        _elem34 = new java.util.ArrayList<Publisher>(_list36.size);
                        @org.apache.thrift.annotation.Nullable Publisher _elem37;
                        for (int _i38 = 0; _i38 < _list36.size; ++_i38)
                        {
                          _elem37 = new Publisher();
                          _elem37.read(iprot);
                          _elem34.add(_elem37);
                        }
                        iprot.readListEnd();
                      }
                      _elem31.add(_elem34);
                    }
                    iprot.readListEnd();
                  }
                  struct.publishers2.add(_elem31);
                }
                iprot.readListEnd();
              }
              struct.setPublishers2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REVIEWS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map39 = iprot.readMapBegin();
                struct.reviews = new java.util.HashMap<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>>(2*_map39.size);
                @org.apache.thrift.annotation.Nullable java.util.Set<java.lang.Integer> _key40;
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _val41;
                for (int _i42 = 0; _i42 < _map39.size; ++_i42)
                {
                  {
                    org.apache.thrift.protocol.TSet _set43 = iprot.readSetBegin();
                    _key40 = new java.util.HashSet<java.lang.Integer>(2*_set43.size);
                    int _elem44;
                    for (int _i45 = 0; _i45 < _set43.size; ++_i45)
                    {
                      _elem44 = iprot.readI32();
                      _key40.add(_elem44);
                    }
                    iprot.readSetEnd();
                  }
                  {
                    org.apache.thrift.protocol.TList _list46 = iprot.readListBegin();
                    _val41 = new java.util.ArrayList<java.lang.String>(_list46.size);
                    @org.apache.thrift.annotation.Nullable java.lang.String _elem47;
                    for (int _i48 = 0; _i48 < _list46.size; ++_i48)
                    {
                      _elem47 = iprot.readString();
                      _val41.add(_elem47);
                    }
                    iprot.readListEnd();
                  }
                  struct.reviews.put(_key40, _val41);
                }
                iprot.readMapEnd();
              }
              struct.setReviewsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MY_UNION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.myUnion = new MyUnion();
              struct.myUnion.read(iprot);
              struct.setMyUnionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BookDto struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.authors != null) {
        oprot.writeFieldBegin(AUTHORS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.SET, struct.authors.size()));
          for (java.util.Set<java.util.List<java.lang.String>> _iter49 : struct.authors)
          {
            {
              oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.LIST, _iter49.size()));
              for (java.util.List<java.lang.String> _iter50 : _iter49)
              {
                {
                  oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, _iter50.size()));
                  for (java.lang.String _iter51 : _iter50)
                  {
                    oprot.writeString(_iter51);
                  }
                  oprot.writeListEnd();
                }
              }
              oprot.writeSetEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        if (struct.isSetType()) {
          oprot.writeFieldBegin(TYPE_FIELD_DESC);
          oprot.writeI32(struct.type.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.publishers != null) {
        oprot.writeFieldBegin(PUBLISHERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.publishers.size()));
          for (java.util.List<java.util.List<Publisher>> _iter52 : struct.publishers)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, _iter52.size()));
              for (java.util.List<Publisher> _iter53 : _iter52)
              {
                {
                  oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, _iter53.size()));
                  for (Publisher _iter54 : _iter53)
                  {
                    _iter54.write(oprot);
                  }
                  oprot.writeListEnd();
                }
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.reviews != null) {
        oprot.writeFieldBegin(REVIEWS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.SET, org.apache.thrift.protocol.TType.LIST, struct.reviews.size()));
          for (java.util.Map.Entry<java.util.Set<java.lang.Integer>, java.util.List<java.lang.String>> _iter55 : struct.reviews.entrySet())
          {
            {
              oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, _iter55.getKey().size()));
              for (int _iter56 : _iter55.getKey())
              {
                oprot.writeI32(_iter56);
              }
              oprot.writeSetEnd();
            }
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, _iter55.getValue().size()));
              for (java.lang.String _iter57 : _iter55.getValue())
              {
                oprot.writeString(_iter57);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.myUnion != null) {
        if (struct.isSetMyUnion()) {
          oprot.writeFieldBegin(MY_UNION_FIELD_DESC);
          struct.myUnion.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.publishers2 != null) {
        oprot.writeFieldBegin(PUBLISHERS2_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.publishers2.size()));
          for (java.util.List<java.util.List<Publisher>> _iter58 : struct.publishers2)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, _iter58.size()));
              for (java.util.List<Publisher> _iter59 : _iter58)
              {
                {
                  oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, _iter59.size()));
                  for (Publisher _iter60 : _iter59)
                  {
                    _iter60.write(oprot);
                  }
                  oprot.writeListEnd();
                }
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BookDtoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BookDtoTupleScheme getScheme() {
      return new BookDtoTupleScheme();
    }
  }

  private static class BookDtoTupleScheme extends org.apache.thrift.scheme.TupleScheme<BookDto> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BookDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.title);
      {
        oprot.writeI32(struct.publishers2.size());
        for (java.util.List<java.util.List<Publisher>> _iter61 : struct.publishers2)
        {
          {
            oprot.writeI32(_iter61.size());
            for (java.util.List<Publisher> _iter62 : _iter61)
            {
              {
                oprot.writeI32(_iter62.size());
                for (Publisher _iter63 : _iter62)
                {
                  _iter63.write(oprot);
                }
              }
            }
          }
        }
      }
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAuthors()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetPublishers()) {
        optionals.set(2);
      }
      if (struct.isSetReviews()) {
        optionals.set(3);
      }
      if (struct.isSetMyUnion()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetAuthors()) {
        {
          oprot.writeI32(struct.authors.size());
          for (java.util.Set<java.util.List<java.lang.String>> _iter64 : struct.authors)
          {
            {
              oprot.writeI32(_iter64.size());
              for (java.util.List<java.lang.String> _iter65 : _iter64)
              {
                {
                  oprot.writeI32(_iter65.size());
                  for (java.lang.String _iter66 : _iter65)
                  {
                    oprot.writeString(_iter66);
                  }
                }
              }
            }
          }
        }
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type.getValue());
      }
      if (struct.isSetPublishers()) {
        {
          oprot.writeI32(struct.publishers.size());
          for (java.util.List<java.util.List<Publisher>> _iter67 : struct.publishers)
          {
            {
              oprot.writeI32(_iter67.size());
              for (java.util.List<Publisher> _iter68 : _iter67)
              {
                {
                  oprot.writeI32(_iter68.size());
                  for (Publisher _iter69 : _iter68)
                  {
                    _iter69.write(oprot);
                  }
                }
              }
            }
          }
        }
      }
      if (struct.isSetReviews()) {
        {
          oprot.writeI32(struct.reviews.size());
          for (java.util.Map.Entry<java.util.Set<java.lang.Integer>, java.util.List<java.lang.String>> _iter70 : struct.reviews.entrySet())
          {
            {
              oprot.writeI32(_iter70.getKey().size());
              for (int _iter71 : _iter70.getKey())
              {
                oprot.writeI32(_iter71);
              }
            }
            {
              oprot.writeI32(_iter70.getValue().size());
              for (java.lang.String _iter72 : _iter70.getValue())
              {
                oprot.writeString(_iter72);
              }
            }
          }
        }
      }
      if (struct.isSetMyUnion()) {
        struct.myUnion.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BookDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.title = iprot.readString();
      struct.setTitleIsSet(true);
      {
        org.apache.thrift.protocol.TList _list73 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
        struct.publishers2 = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>(_list73.size);
        @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<Publisher>> _elem74;
        for (int _i75 = 0; _i75 < _list73.size; ++_i75)
        {
          {
            org.apache.thrift.protocol.TList _list76 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
            _elem74 = new java.util.ArrayList<java.util.List<Publisher>>(_list76.size);
            @org.apache.thrift.annotation.Nullable java.util.List<Publisher> _elem77;
            for (int _i78 = 0; _i78 < _list76.size; ++_i78)
            {
              {
                org.apache.thrift.protocol.TList _list79 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                _elem77 = new java.util.ArrayList<Publisher>(_list79.size);
                @org.apache.thrift.annotation.Nullable Publisher _elem80;
                for (int _i81 = 0; _i81 < _list79.size; ++_i81)
                {
                  _elem80 = new Publisher();
                  _elem80.read(iprot);
                  _elem77.add(_elem80);
                }
              }
              _elem74.add(_elem77);
            }
          }
          struct.publishers2.add(_elem74);
        }
      }
      struct.setPublishers2IsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list82 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.SET, iprot.readI32());
          struct.authors = new java.util.ArrayList<java.util.Set<java.util.List<java.lang.String>>>(_list82.size);
          @org.apache.thrift.annotation.Nullable java.util.Set<java.util.List<java.lang.String>> _elem83;
          for (int _i84 = 0; _i84 < _list82.size; ++_i84)
          {
            {
              org.apache.thrift.protocol.TSet _set85 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
              _elem83 = new java.util.HashSet<java.util.List<java.lang.String>>(2*_set85.size);
              @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _elem86;
              for (int _i87 = 0; _i87 < _set85.size; ++_i87)
              {
                {
                  org.apache.thrift.protocol.TList _list88 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
                  _elem86 = new java.util.ArrayList<java.lang.String>(_list88.size);
                  @org.apache.thrift.annotation.Nullable java.lang.String _elem89;
                  for (int _i90 = 0; _i90 < _list88.size; ++_i90)
                  {
                    _elem89 = iprot.readString();
                    _elem86.add(_elem89);
                  }
                }
                _elem83.add(_elem86);
              }
            }
            struct.authors.add(_elem83);
          }
        }
        struct.setAuthorsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = io.github.heldev.verso.app.Type.findByValue(iprot.readI32());
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list91 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.publishers = new java.util.ArrayList<java.util.List<java.util.List<Publisher>>>(_list91.size);
          @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<Publisher>> _elem92;
          for (int _i93 = 0; _i93 < _list91.size; ++_i93)
          {
            {
              org.apache.thrift.protocol.TList _list94 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
              _elem92 = new java.util.ArrayList<java.util.List<Publisher>>(_list94.size);
              @org.apache.thrift.annotation.Nullable java.util.List<Publisher> _elem95;
              for (int _i96 = 0; _i96 < _list94.size; ++_i96)
              {
                {
                  org.apache.thrift.protocol.TList _list97 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                  _elem95 = new java.util.ArrayList<Publisher>(_list97.size);
                  @org.apache.thrift.annotation.Nullable Publisher _elem98;
                  for (int _i99 = 0; _i99 < _list97.size; ++_i99)
                  {
                    _elem98 = new Publisher();
                    _elem98.read(iprot);
                    _elem95.add(_elem98);
                  }
                }
                _elem92.add(_elem95);
              }
            }
            struct.publishers.add(_elem92);
          }
        }
        struct.setPublishersIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TMap _map100 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.SET, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.reviews = new java.util.HashMap<java.util.Set<java.lang.Integer>,java.util.List<java.lang.String>>(2*_map100.size);
          @org.apache.thrift.annotation.Nullable java.util.Set<java.lang.Integer> _key101;
          @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> _val102;
          for (int _i103 = 0; _i103 < _map100.size; ++_i103)
          {
            {
              org.apache.thrift.protocol.TSet _set104 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
              _key101 = new java.util.HashSet<java.lang.Integer>(2*_set104.size);
              int _elem105;
              for (int _i106 = 0; _i106 < _set104.size; ++_i106)
              {
                _elem105 = iprot.readI32();
                _key101.add(_elem105);
              }
            }
            {
              org.apache.thrift.protocol.TList _list107 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _val102 = new java.util.ArrayList<java.lang.String>(_list107.size);
              @org.apache.thrift.annotation.Nullable java.lang.String _elem108;
              for (int _i109 = 0; _i109 < _list107.size; ++_i109)
              {
                _elem108 = iprot.readString();
                _val102.add(_elem108);
              }
            }
            struct.reviews.put(_key101, _val102);
          }
        }
        struct.setReviewsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.myUnion = new MyUnion();
        struct.myUnion.read(iprot);
        struct.setMyUnionIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

